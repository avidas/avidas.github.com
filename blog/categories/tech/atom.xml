<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Tech | Avi Das]]></title>
  <link href="http://avidas.github.com/blog/categories/tech/atom.xml" rel="self"/>
  <link href="http://avidas.github.com/"/>
  <updated>2022-08-14T17:33:58-04:00</updated>
  <id>http://avidas.github.com/</id>
  <author>
    <name><![CDATA[Avi (Ananya Das)]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Reflections on WeWork: Relentless Change and Unrealized Potential]]></title>
    <link href="http://avidas.github.com/blog/2022/08/14/reflections-on-wework-relentless-change-and-unrealized-potential/"/>
    <updated>2022-08-14T17:17:00-04:00</updated>
    <id>http://avidas.github.com/blog/2022/08/14/reflections-on-wework-relentless-change-and-unrealized-potential</id>
    <content type="html"><![CDATA[<p>I spent three years as a software engineer at WeWork. Three years is north of 6,000 working hours and this post is an account of my time there and key takeaways. If you are interested in what the experience of working in a hyper growth company feels like, this account may interest you.</p>

<p><strong>Getting There</strong></p>

<p>Working for WeWork is difficult to summarize in a single sentence, or even a paragraph. A fervent energy permeated the whole company, driven by the charismatic CEO Adam Neumann. There has been a lot that has already been written about WeWork, but every viewpoint provides something new. Mine is that of a software engineer in WeWork’s tech org, shipping software during the ups and downs as WeWork attempted to blitzscale the world's fastest growing real estate business.</p>

<p>Having joined WeWork from Braintree, I had more experience with established companies with proven business models, operating at the scale of web commerce. The relative stability and nature of industry meant that an engineer's contributions would be making small and incremental progress with few opportunities to build something from the ground up. I was recruited by a longtime friend who was a director of engineering at WeWork. It felt like a good opportunity to experience engineering in a hyper-growth company.</p>

<p>I remember my onboarding day, easily the most boisterous one of my career. The host had an insatiable level of energy and it was fascinating to see people working in a whole host of disciplines, legal, architecture, design, real estate, tax all brought together in one room. At the end of the day, Miguel, one of the co-founders, came and spoke about how WeWork started. Having seen tech culture in past companies, there was already the sense that this company would be different from anything I had seen before.</p>

<p><strong>Trial By Billing</strong></p>

<p>The first team I joined was building billing in house at Wework, and it was a challenging experience for my first six months of tenure. We were working in a monolith with poorly defined domain boundaries. During its growth phase, WeWork optimized for flexibility offered to members in terms of lease agreements, discounts, and payment methods. However, the infrastructure felt the weight of this product growth, making ongoing development a challenge. The team had doubled in size in a very short time, resulting in a high proportion of engineers new to the company.
Everyone I worked with was smart and genuine, and there was great camaraderie across the team. It felt far more familial than I've ever encountered before in my career.</p>

<p><em>Wework tech org managed to hire a group of genuinely good, talented people. This cannot be taken for granted at any company.</em></p>

<p>My job was to tug away the billing codebase from the rest of the monolith. This was an exercise that was doomed to failure, not least due to an arbitrary deadline that was laid down on us. We toiled hard, made a valiant attempt at taming the Spaghetti monster codebase responsible for processing hundreds of millions in recurring revenue.</p>

<p>By January, leadership saw things differently, and decided to take the work from our humble four person team to the Tel Aviv office and dedicate an entire new department towards solving WeWork's billing conundrum. That department would eventually grow to over a hundred people, engaged in a multi year effort to architect billing at WeWork.</p>

<p><em>Your view of the work you and your team is doing may be wildly different from how the key stakeholders see the work.</em> Leadership changed their priority often during WeWork, making it a constant guessing game when the product direction would change or a re-org would happen. For a company of WeWork's valuation, the rate of change was that of a small startup struggling for identity. This caused stress for those engineers who wanted to focus and specialize in a product area for a long period.</p>

<p><strong>WeLive</strong></p>

<p>As I sought out opportunities within the company, I learnt of a new effort at WeLive, the residential arm of WeWork. WeLive felt like an opportunity to build a product from the ground up, stay close to users, work with a nimble team and be a startup with large company resources. Sounds too good to be true?</p>

<p>It was. It was really great for a while to have zero red tape and build what users wanted. We worked on a product which had a real consumer need and potentially a massive market, but ultimately the environment was not a fit for what we were building. As WeLive failed to expand at the rate of WeWork, business drying up meant that it was no longer possible to budget a technology team and incur millions in operating expenses.</p>

<p>At the same time, top level leadership became completely invested in a new redesign of the WeWork app. This meant our team was rolled over into that org, into a team that would provide core services for the WeWork member app.</p>

<p>We would lose the autonomy and purpose which drove us during WeLive. However, we would now build infrastructure to support all teams building products for half a million WeWork members.</p>

<p><strong>Platform</strong></p>

<p>The core team, with primarily senior/staff engineers, was a very competent team. We lacked a clear mission or agenda though and became the fail safe of everything that would fall through the cracks of the product teams. Secondly, the team members began proving themselves to be too competent, so we started losing team members to higher priority product initiatives. There was a period of a couple weeks when we lost all three of our mobile engineers. In the midst of all this, we managed to launch a service to offer feature gating and experimentation in the WeWork app. We changed the way every single feature in the WeWork app got launched, and began accepting consumers beyond the app.</p>

<p>However, the steady loss of key members was a sign and by December 2018, it was clear that we were in the shadows where the product teams delivering the app redesign were in the limelight. A re-org would soon follow, and we would become another product team contributing to the WeWork member app.</p>

<p>The next step in my journey was being involved in the re-architecture of WeWork’s internal social experience used by its hundreds of thousands of members and community managers. The existing app was built in Angular 1.5, and was a maintenance headache. The groundwork would be laid for a modern app using React, while building up a component library which could be plugged in to create key experiences for members. After working primarily in backend development at WeWork, I was keen to do more frontend work, and took on the challenge to work amidst a group of capable frontend engineers.</p>

<p>The next few months were quite enjoyable. All of us believed in the work, and this resulted in a lot of momentum and collaboration in the team. There was a lot of emphasis on laying the right foundations, and the team was very engineering-driven. Perhaps too much so though, and design and product were not as invested in the project as engineering was. A lack of centralized focus towards delivery, coupled with changing designers meant a lot of work had to be redone. Changing priorities meant the project was resource constrained, and the full rollout of the app would get delayed by a year.</p>

<p><em>Rewrites are expensive. Weighing in failure scenarios can help derisk this.</em></p>

<p><strong>Intents</strong></p>

<p>Around this time, my manager has been discussing with me the possibility of promotion. Since I was in a new team, under a new management structure and using a new software stack, my relative contribution made the case harder to make. The advice was to seek out opportunities where I could have a higher relative impact and drive bigger results to make a stronger case.</p>

<p><em>Your relative impact in a team matters, as one becomes more senior, staying fullstack/generalist is challenging. Specialization can be a faster path to level up.</em></p>

<p>My opportunity came in the form of a curious word: Intents. The product leader for Member Apps had the vision of taking our member facing feed from plaintext to a variety of structured posts, evolving towards a marketplace. From one type of posts, we would go to a multitude of posts on the feed, and the grouping was called Intents. It made a lot of sense for WeWork to have, and needed experienced backend contributors to architect the level of flexibility and dynamism required.</p>

<p>What followed was a tragic case of misaligned expectations and poor timing. We were staffed generously, with solid talent and the rest of the org shielding the team from adjacent work streams.</p>

<p>Product wanted a flexible way to experiment with a large number of posts types without needing to ship a build to the app store. This key requirement meant that frontend, backend and design got involved in a month-long debate on how to execute this, since we lacked a design system and component library. We also lacked expertise in the company on how to build such a system. We eventually adapted the server driven ui paradigm. Lot of draining days fine tuning the architecture meant that we learnt a lot about division of responsibilities, managing state and the best UX for users.</p>

<p>However, the timeline engineering came up with was mysteriously cut short by exactly a month. So we hurried back to the drawing board, cut some key aspects to refit the project and came up with a compromise. Upon agreement, we were off to the races.</p>

<p>After a strenuous and heads down period, we delivered the project, two weeks over time, but something we were proud to ship and began to roll out the feature to users in September. Initial engagement of the new posts were 3-5x regular posts, which made our effort a success. However, it did not sufficiently impact the overall strategic move to increase engagement holistically in the WeWork app.</p>

<p><em>Near term momentum for a project or team does not necessarily ensure its success and sustainability.</em></p>

<p><strong>IPO &amp; Layoffs</strong></p>

<p>In September, everything changed as WeWork went to file for an IPO. Everything else became a side show as in a period of weeks we went from a unicorn to a laughing stock on the street. The change in mood in the company was palpable and dramatic, and within days the unthinkable happened with Adam Neumann leaving the company. New leadership from Softbank came in and layoffs were in the picture. All these meant that Intents would be on their way out as the WeWork app would pivot to a utility first app.</p>

<p>Layoffs happened late November, right before the holidays. Surprisingly, engineering was mostly unaffected. December and January were months of struggle, barely enjoying the holidays as I worked to sharpen up for interviews.</p>

<p>Multiple posts can be written about interviewing and negotiations. The biggest piece of advice is to test the market regularly, use inner channels and never immediately rage quit. Long story short, by March I had my job search wrapped up and could breathe again and contemplate when to leave.</p>

<p>However, there was one more story still left for my journey at WeWork. After a big reorg, I had shifted over to the messaging team. Despite our failure with Intents, our engineering effort was lauded and I got promoted.</p>

<p><strong>One Last Dance</strong></p>

<p>In March, two things happened. One, in an aggressive plan to cut costs, WeWork decided to migrate all applications from Heroku to an in-house Kubernetes based hosting solution. This meant a swat team would form, responsible for shifting over a dozen apps and databases. Not one to pass up a sharp learning curve, I joined the team. My last act at WeWork would be working on devOps after being a product engineer during the entirety. Two, the Covid19 pandemic would sweep across the globe and cause everyone to shelter in place in NYC.</p>

<p>The next few weeks were whirlwind, as we dug into a lot of legacy infrastructure, taking stock of compute and storage resources, dockerizing apps and getting them ready for migration, all the while familiarizing ourselves with a whole host of new Kubernetes tools. After putting in long hours for a few weeks, we pulled it off and migrated all the applications by April. Despite the intensity of the effort, I learnt a lot and enjoyed work after a while. Performance and reliability is more in the realms of science than engineering, and a stark contrast to product work. I would often go to sleep still thinking about performance tuning.</p>

<p>My time at WeWork was great at times but overall, it was the story of unrealized promise and potential. On one hand, the diversity of problems and the great coworkers made for a dynamic and rewarding journey. However, it was frustrating to feel that in aggregate, it could have been so much more. I hope this account will help someone looking to join a rocketship, driven by leaders with Messiah complexes.</p>

<p><strong>Postscript</strong></p>

<p><strong>Growth</strong>: The growth trajectory of the WeWork tech org was astronomical. During my time, it would grow 6x over two years and eventually shrink down to one third its size over the period of a few months.</p>

<p><em>Engineers would benefit by taking stock of how their organization is growing vs what is being delivered. A sustained mismatch means a correction is due.</em>
<em>There are many incentives that can drive growth in an organization, and it's worth thinking about if you align with those incentives.</em></p>

<p><strong>Extracurriculars</strong>: This writeup has been primarily about work, but extracurriculars were a big part of the WeWork experience. Perhaps the most grandiose of those were two yearly events, Summer Camp and Summit. Both events had the entirety of WeWork employees experience product demos, mission pitches and celebrity appearances. Despite its reputation, I really enjoyed my two times at the UK version of summer camp. It felt mind boggling how a company could afford it, but it was a fun choose your own adventure weekend in the idyllic English countryside.
Startups are created in the image of the founders, or the founding team. Think whether you would align with the founding team, because that is the culture that will seep in across the company.</p>

<p><strong>#personal-finance</strong>: My second week at WeWork, I started a slack channel to discuss personal finance. Over three years, that channel grew to over three thousand people helping each other on their personal finance goals. It was also a great case study of watching a community grow, from early adopters, to hitting critical mass, and then gathering enough momentum where it would influence company wide initiatives, such as instituting a 401k and eventually 401k matching at WeWork. It was one the most gratifying things during my time there.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finding the right team at a new company]]></title>
    <link href="http://avidas.github.com/blog/2020/06/22/finding-the-right-team-at-a-new-company/"/>
    <updated>2020-06-22T09:48:00-04:00</updated>
    <id>http://avidas.github.com/blog/2020/06/22/finding-the-right-team-at-a-new-company</id>
    <content type="html"><![CDATA[<p>The larger a company is, the more choices there could be for teams to contribute to. In a small company, you could meet your teammates during the hiring process. However, in large companies hiring for gneneralist software engineer roles, it does not give the opportunity to get a feel for the team before you join. The team matching process has a large variance across the industry, from companies interviewing for a specific role in a team to joining an org within a company to joining potentially any team with an open role across the whole company.</p>

<p>It is almost always the better approach to talk to the manager and team members before joining the company. However, if that choice is not present, it is important to understand that internal transfers are commonplace in most companies. The inertia of staying in a team which is not the right fit is not ideal when there are many opportunities internal and external for engineers.</p>

<p>What is the projects the team will be involved in? Is that interesting for you?</p>

<p>Specialization in particular technical stack or a preference for a specific problem space are both useful. Let's just assume certain things. Let's assume that in a job, when we are there working, we do want to give it 100%. We have a limited amount of time and want to feel a sense of autonomy, mastery and purpose. The biggest leaps of my career came when I was so engrossed in my work that it stopped feeling like work. Being interested in your end resu are also very important. If you really want to be close to the end users, you may not do as well in a systems team far removed from users.</p>

<p>What is the company going and what does it need?</p>

<p>Think a bit higher level, new projects can be exciting. But is this new project congruent with the company's vision? What would take it to fund a project? Sustaining a team of engineers, PMs, support and others is a multi million dollars per year venture. Does the output that the team produce justify that venture? Challenge your EM and PM to understand this. Ideally, you want the value your team produce to far outweigh the costs. This makes it a sustainable beyond quarters, and halves and gives the opportunity to contribute at higher and higher levels. Finding the intersection between the company's pressing needs and your skills and interests is key to finding the right fit.</p>

<p>How are the team dynamics?</p>

<p>Joining a team can be like joining a new family. You have to see them almost everyday, work together, trust each other, help and push the common goal while everyone having individual career plans. The dynamics of the team will have a big impact your quality of life.</p>

<p>When do people begin work and what time do they leave work. Check if aligns with your view of life work balance. If you want the team to engage outside of work, you may be disappointed if everyone in the team takes it as a job and do not socialize outside.</p>

<p>How a team handles disagreements and conflict is key to how well a team works together. A subset of members of the team should be able to reach decisions without always relying on the EM, PM, or more senior.</p>

<p>The distribution of seniority across the team will have impact on your goals. If you are early in your career, you want some more senior members in the team for support. If you want to mentor engineers, you do not want a situation where everyone else is at least as senior as you.</p>

<p>Besides levelling, it's useful to find out when there have been promotions in the team. This is an indicator of how the organization views the place of the team and that there is a track record of people growing in their roles.</p>

<h3>Team Responsibilities</h3>

<ul>
<li>What are quarterly vs yearly goals for the team? What are the challenges to achieving those goals?</li>
<li>What has the team working on for the last 6 to 12 months? Has the team been meeting it's goals?</li>
<li>What are the key challenges the team faces?</li>
<li>Are there any low hanging fruit? Is there work that noone wants to touch?</li>
<li>What does on-call responsibiliteis look like for the time? Are their runbooks for common outages? Are there post mortems for most recent outages?</li>
<li>How does a feature go from idea to general availability? How does the team iterate on a shipped feature?</li>
<li>What percentage of the team's work is new projects vs maintenance work vs paying back tech debt?</li>
<li>How much flexibility is there to get involved in different streams of work, in terms of technology and projects?</li>
</ul>


<h3>Team positioning in broader org</h3>

<ul>
<li>How long has the team been around, and what is the expected longevity of the team?</li>
<li>Explain the distribution of responsibilites between this team and the broder org, including but not limited to the upstream and downstream teams.</li>
<li>Does the work the team is doing align with the priorties that the company has? Otherwise, how does leadership perceive the work the team is engaged in?</li>
<li>Are their architecture diagrams that shows the systems the team owns and their dependencies?</li>
</ul>


<h3>Team Culture</h3>

<ul>
<li>Is the team adequately staffed to meet it's goals? If not, what is the hiring strategy?</li>
<li>How is the team distribution by seniority and tenure at the company?</li>
<li>Does the team support remote work?</li>
<li>What hours and time zones does the team operate in?</li>
<li>Does the team have an onboarding process? What are aspects of onboarding to this team that new hires usually struggle with?</li>
<li>How does the team communicate? Is there an expectation to be always available for syncronous communication (e.g. meetings/chat)?</li>
<li>Does the team engage in social activites outside of work?</li>
<li>When was the last time someone left the team? Could more context be shared?</li>
</ul>


<h3>Career Goals</h3>

<ul>
<li>Ooh find examples for company cultures (tie in opinion with some research)  e.g. Basecamp primarily does all communication async</li>
<li>What’s your style of management

<ul>
<li>How long you have been a manager</li>
</ul>
</li>
<li>Can the manager articulate a vision for where the team's product is going, and how that strategically fits into the company/org's larger goals?</li>
</ul>


<p>team evolution (last 6 months 12 months, when people joined and left, how long team around, how has it changed over past and how might it change)</p>

<p>your own career goals
  - User impact of team, how to have high impact
  * Are their opportunities to get mentored and/or mentor others in the team? Are there other opportunities to grow in the people and communication axes?</p>

<pre><code>  - How explicitly does the manager think about career advancement for his or her reports?
</code></pre>

<ul>
<li>How do they foresee you fitting in? What kind of seniority? leadership opportunities? of course, managers can and do lie in these, but i've found that just sensing how prepared they are is a strong signal 1 a manager that doesn't really think about their reports' career advancement won't be prepared to answer the question mostly i'm sensing for whether managers are aware and into the "meta" aspects of management</li>
<li>A skill I would like to improve is to be a better mentor. What are my opportunities to get training?

<ul>
<li>Pair program with mentor</li>
<li>If I want to be promo in timeframe, what’s my path</li>
</ul>
</li>
<li>What are the ways in which a new person joining the team can have a high impact?</li>
</ul>


<p>Vs Expectations
  - Expectations 30-60-90 day</p>

<ul>
<li>Find the best intersection between my skills/interests and what is important for the company and get involved.</li>
<li>That they are strategically minded and looking out for their team and their reports
(Recognition is really important and it should not be only a subsection of the team giving demos. Maybe this is hard to pick when selecting a team)</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mindsets for Tech Behavioral Interviews]]></title>
    <link href="http://avidas.github.com/blog/2020/03/07/on-tech-behavioral-interviews/"/>
    <updated>2020-03-07T13:32:00-05:00</updated>
    <id>http://avidas.github.com/blog/2020/03/07/on-tech-behavioral-interviews</id>
    <content type="html"><![CDATA[<p><em>Axiom: Any software engineer writing a blog on tech will eventually write a post about interviews. - Yours Truly</em></p>

<p><strong>Interview Day</strong></p>

<p>You walk into a room with one or two people, who may be taking notes in a notepad or a laptop. The most common starter question is <em>tell me about yourself</em>.</p>

<p><img class="left" src="/images/behavioral_interview.jpg" width="350" height="350" title="Interview Chair" alt="Interview Chair"></p>

<p>This used to be a question I didn't know where to start or end. A possible interpretation of this question is to provide a succinct summary of your career.</p>

<p>The opportunity here is to prime the interviewer towards directions which would highlight your best career experiences. What part of your experience would be the most pertinent for this job? Doing this thinking beforehand would be helpful for the latter part of the interview.</p>

<p>As an interviewee, we are in a sales role and the product is our skills, experience and future potential. For engineers, this is not a natural part of our workflow. The best sales, however, is based on truth. Being honest and talking proudly about your best career achievements will aid you in this early phase.</p>

<p>A very common follow up is <em>what your ideal next role would look like</em>? You've just given them the path which got you to where you are. It is now time to lay out what you want for the future.</p>

<p>The opportunity in this question to highlight areas where you want to grow. Do you see yourself going into engineering management? Do you want to become really good at javascript and browsers? Or do you prefer to become an expert in server and cluster management? Again, it serves you to be honest here since this question helps you to evaluate if the growth opportunities you are looking for would be possible at this company.</p>

<p><em>Go in with a win-win mentality: It is a lot more about finding a mutual fit rather than getting through a cross examination.</em></p>

<p>After this point, the interview can go in a lot of different directions. Companies may dig deeper into your past experience or go through example scenarios to understand your  thinking process. Knowing your resume and being able to talk in depth about each part will be important.</p>

<p><strong>Before The Interview</strong></p>

<!-- more -->


<p>Practice and preparation will undeniably make you better. Even if it's a friend who is asking you a series of questions, answering them again and again will solidify those responses and you don't have to think every permutation of interview questions on your feet during the interview.</p>

<p>Despite that, it's impossible to prepare for every possibility. In those cases, it's useful to get better at on the spot thinking. I suggest the following three activities to improve on that front.</p>

<ol>
<li><p><strong>Meditation</strong>: Meditating on the morning of the interview can be great to calm down your nerves and help with fight or flight syndrome during an interview.</p></li>
<li><p><strong>Public Speaking</strong>: Whether it is in front of a group of friends, or coworkers or a wider audience, public speaking will sharpen your ability to be more poised when the spotlight is on you.</p></li>
<li><p><strong>Improv</strong>: Improv is a <a href="http://aviadas.com/blog/2019/03/16/life-lessons-from-doing-improv/">wonderful activity</a>, and it is all about being on the spot and working with stranger in a supportive environment building a scene and creating a story. I have found the spontaneity of Improv to be a great value add when facing an interview panel.</p></li>
</ol>


<p>Good luck with your interview process!</p>
]]></content>
  </entry>
  
</feed>
